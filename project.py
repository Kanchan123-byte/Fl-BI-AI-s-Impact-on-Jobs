# -*- coding: utf-8 -*-
"""project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YCAOagh1nzuhU0dFY-2gX3W0xpot5mSd

**AI's Impact on Jobs - An Exploratory Analysis**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import sqlite3

from google.colab import files
uploaded = files.upload()
df_your_job_vs_ai = pd.read_csv('your job vs ai.csv')
df_joblist_ai = pd.read_csv('ai_job_dataset.csv')



print(df_your_job_vs_ai.head())
print(df_your_job_vs_ai.info())
print(df_your_job_vs_ai.describe())
print(df_your_job_vs_ai.isnull().sum())

print(df_joblist_ai.head()),
print(df_joblist_ai.info()),
print(df_joblist_ai.describe())
print(df_joblist_ai.isnull().sum())

"""Chapter 1: The Case of the Missing Pieces & Messy Clues"""

# --- Cleaning df_joblist_ai ---
print("\n--- Cleaning df_joblist_ai ---")

# Handle missing 'salary' values
median_salary = df_joblist_ai['salary_usd'].median()
df_joblist_ai['salary_usd'].fillna(median_salary, inplace=True)
print(f"Filled missing 'salary_usd' values with median: {median_salary}")

# Standardize text columns: Convert to lowercase and strip whitespace
text_cols_ai = ['job_title', 'industry', 'experience_level', 'company_size', 'employment_type', 'location']
for col in text_cols_ai:
    if col in df_joblist_ai.columns:
        df_joblist_ai[col] = df_joblist_ai[col].astype(str).str.lower().str.strip()
        print(f"Standardized column: '{col}'")

# --- Cleaning df_your_job_vs_ai ---
print("\n--- Cleaning df_your_job_vs_ai ---")

# Standardize 'Job Title' column: Convert to lowercase and strip whitespace
if 'Job Title' in df_your_job_vs_ai.columns:
    df_your_job_vs_ai['Job Title'] = df_your_job_vs_ai['Job Title'].astype(str).str.lower().str.strip()
    print("Standardized column: 'Job Title'")

# Check for any remaining nulls after cleaning (should be 0 for 'salary' in df_joblist_ai)
print("\n--- Missing Values after Cleaning (df_joblist_ai) ---")
print(df_joblist_ai.isnull().sum())
print("\n--- Missing Values after Cleaning (df_your_job_vs_ai) ---")
print(df_your_job_vs_ai.isnull().sum()) # This dataset might still have nulls if not specifically handled

print("\nData Cleaning & Preprocessing Complete!")

# --- Setup In-Memory SQLite Database and Load Cleaned DataFrames ---
# This step is crucial for demonstrating SQL queries on your data.
conn = sqlite3.connect(':memory:') # Create an in-memory SQLite database connection

# Load cleaned DataFrames into SQL tables
df_joblist_ai.to_sql('ai_jobs', conn, if_exists='replace', index=False)
df_your_job_vs_ai.to_sql('your_jobs_vs_ai', conn, if_exists='replace', index=False)

print("\nCleaned DataFrames successfully loaded into SQLite tables: 'ai_jobs' and 'your_jobs_vs_ai'")